apiVersion: v1
kind: ServiceAccount
metadata:
  name: mediq-service-account
  labels:
    app: mediq
    component: serviceaccount
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mediq-role
  labels:
    app: mediq
    component: rbac
rules:
# Pod management permissions
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]

# Service discovery permissions
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]

# ConfigMap and Secret access
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

# Events for monitoring
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

# Metrics and monitoring
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mediq-role-binding
  labels:
    app: mediq
    component: rbac
subjects:
- kind: ServiceAccount
  name: mediq-service-account
  namespace: default
roleRef:
  kind: Role
  name: mediq-role
  apiGroup: rbac.authorization.k8s.io
---
# Monitoring service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mediq-monitoring-service-account
  labels:
    app: mediq
    component: monitoring-serviceaccount
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mediq-monitoring-cluster-role
  labels:
    app: mediq
    component: monitoring-rbac
rules:
# Prometheus scraping permissions
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- apiGroups: ["networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]

# Metrics access
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mediq-monitoring-cluster-role-binding
  labels:
    app: mediq
    component: monitoring-rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mediq-monitoring-cluster-role
subjects:
- kind: ServiceAccount
  name: mediq-monitoring-service-account
  namespace: default
---
# Pod Security Policy
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: mediq-restricted-psp
  labels:
    app: mediq
    component: security-policy
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  runAsUser:
    rule: 'MustRunAsNonRoot'
  runAsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
  hostNetwork: false
  hostIPC: false
  hostPID: false
  hostPorts: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mediq-psp-role
  labels:
    app: mediq
    component: security-rbac
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - mediq-restricted-psp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mediq-psp-role-binding
  labels:
    app: mediq
    component: security-rbac
roleRef:
  kind: Role
  name: mediq-psp-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: mediq-service-account
  namespace: default
- kind: ServiceAccount
  name: mediq-monitoring-service-account
  namespace: default
