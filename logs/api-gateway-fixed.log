[32m[Nest] 1584078  - [39m08/21/2025, 11:20:56 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 1584078  - [39m08/21/2025, 11:20:56 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mClientsModule dependencies initialized[39m[38;5;3m +9ms[39m
[32m[Nest] 1584078  - [39m08/21/2025, 11:20:56 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[31m[Nest] 1584078  - [39m08/21/2025, 11:20:56 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39mUnknownDependenciesException [Error]: Nest can't resolve dependencies of the GatewayService (?, OCR_SERVICE, INSTITUTION_SERVICE, OCR_ENGINE_SERVICE). Please make sure that the argument "USER_SERVICE" at index [0] is available in the GatewayModule context.

Potential solutions:
- Is GatewayModule a valid NestJS module?
- If "USER_SERVICE" is a provider, is it part of the current GatewayModule?
- If "USER_SERVICE" is exported from a separate @Module, is that module imported within GatewayModule?
  @Module({
    imports: [ /* the Module containing "USER_SERVICE" */ ]
  })

    at Injector.lookupComponentInParentModules [90m(/home/killerking/automated_project/compfest/MediQ/MediQ-Backend-API-Gateway/[39mnode_modules/[4m@nestjs[24m/core/injector/injector.js:286:19[90m)[39m
    at async resolveParam [90m(/home/killerking/automated_project/compfest/MediQ/MediQ-Backend-API-Gateway/[39mnode_modules/[4m@nestjs[24m/core/injector/injector.js:141:38[90m)[39m
    at async Promise.all (index 0)
    at async Injector.resolveConstructorParams [90m(/home/killerking/automated_project/compfest/MediQ/MediQ-Backend-API-Gateway/[39mnode_modules/[4m@nestjs[24m/core/injector/injector.js:169:27[90m)[39m
    at async Injector.loadInstance [90m(/home/killerking/automated_project/compfest/MediQ/MediQ-Backend-API-Gateway/[39mnode_modules/[4m@nestjs[24m/core/injector/injector.js:75:13[90m)[39m
    at async Injector.loadProvider [90m(/home/killerking/automated_project/compfest/MediQ/MediQ-Backend-API-Gateway/[39mnode_modules/[4m@nestjs[24m/core/injector/injector.js:103:9[90m)[39m
    at async [90m/home/killerking/automated_project/compfest/MediQ/MediQ-Backend-API-Gateway/[39mnode_modules/[4m@nestjs[24m/core/injector/instance-loader.js:56:13
    at async Promise.all (index 3)
    at async InstanceLoader.createInstancesOfProviders [90m(/home/killerking/automated_project/compfest/MediQ/MediQ-Backend-API-Gateway/[39mnode_modules/[4m@nestjs[24m/core/injector/instance-loader.js:55:9[90m)[39m
    at async [90m/home/killerking/automated_project/compfest/MediQ/MediQ-Backend-API-Gateway/[39mnode_modules/[4m@nestjs[24m/core/injector/instance-loader.js:40:13 {
  type: [32m'GatewayService'[39m,
  context: {
    index: [33m0[39m,
    dependencies: [
      [32m'USER_SERVICE'[39m,
      [32m'OCR_SERVICE'[39m,
      [32m'INSTITUTION_SERVICE'[39m,
      [32m'OCR_ENGINE_SERVICE'[39m
    ],
    name: [32m'USER_SERVICE'[39m
  },
  metadata: {
    id: [32m'25824c8aef4ee01177026'[39m
  },
  moduleRef: {
    id: [32m'dc855c0b6a193710cd3e1'[39m
  }
}
